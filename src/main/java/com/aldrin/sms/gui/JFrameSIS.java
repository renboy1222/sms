/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aldrin.sms.gui;


import com.aldrin.sms.config.HibernateConfig;
import com.aldrin.sms.dao.imp.StudentDAOImpl;
import com.aldrin.sms.entity.Course;
import com.aldrin.sms.entity.Gender;
import com.aldrin.sms.entity.Student;
import com.aldrin.sms.gui.dialog.JDialogCourse;
import com.aldrin.sms.gui.dialog.au.JDialogStudentAU;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ALDRIN B. C.
 */
public class JFrameSIS extends javax.swing.JFrame implements MouseListener {

    /**
     * Creates new form JFrameSIS
     */
    private Student student = new Student();

    public JFrameSIS() {
        initComponents();
        getRootPane().putClientProperty(FlatClientProperties.TITLE_BAR_BACKGROUND, new Color(0, 102, 153));
        jTextFieldSearch.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Search");
        //icon
        jTextFieldSearch.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/search.svg"));
        setTable();
        selectStudent();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableStudent = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldSearch = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SMS- STUDENT MANAGEMENT SYSTEM");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jTableStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableStudent);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(10, 425));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel6, java.awt.BorderLayout.WEST);

        jPanel7.setPreferredSize(new java.awt.Dimension(10, 425));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, java.awt.BorderLayout.EAST);

        jPanel8.setPreferredSize(new java.awt.Dimension(886, 10));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1070, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel8, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setPreferredSize(new java.awt.Dimension(886, 50));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jButton1.setIcon(new FlatSVGIcon("svg/new.svg"));
        jButton1.setText("New");
        jButton1.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButton1.setPreferredSize(new java.awt.Dimension(80, 32));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setIcon(new FlatSVGIcon("svg/edit.svg"));
        jButton2.setText("Update");
        jButton2.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButton2.setPreferredSize(new java.awt.Dimension(80, 32));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jButton3.setIcon(new FlatSVGIcon("svg/delete.svg"));
        jButton3.setText("Delete");
        jButton3.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButton3.setPreferredSize(new java.awt.Dimension(80, 32));
        jPanel3.add(jButton3);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setPreferredSize(new java.awt.Dimension(300, 50));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 10));

        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(250, 32));
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });
        jPanel4.add(jTextFieldSearch);

        jPanel2.add(jPanel4, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jMenu1.setText("Setup");

        jMenuItem1.setText("Course");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setText("About");
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(1086, 602));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JDialogCourse course = new JDialogCourse(this, true);
        course.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JDialogStudentAU student = new JDialogStudentAU(this, true);
        student.setVisible(true);
        selectStudent();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JDialogStudentAU student = new JDialogStudentAU(this, true, this.student, "Update");
        student.setVisible(true);
        selectStudent();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        String text = jTextFieldSearch.getText().trim();
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text + ",*"));
        }
    }//GEN-LAST:event_jTextFieldSearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableStudent;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"ID", "COURSE ID", "FIRST NAME", "SURNAME", "COURSE", "GENDER", "MOBILE", "EMAIL", "ADDRESS", "DATE OF BIRTHF", "DATE OF BIRTH"}, 0);

    private TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tableModel);

    private void setTable() {
        jTableStudent.setCellSelectionEnabled(true);
        jTableStudent = new JTable(tableModel);
        jScrollPane1.setViewportView(jTableStudent);
        jTableStudent.addMouseListener(this);
        jTableStudent.setRowSorter(sorter);
        TableColumn hide0 = jTableStudent.getColumnModel().getColumn(0);
        hide0.setMinWidth(0);
        hide0.setMaxWidth(0);
        hide0.setPreferredWidth(0);
        TableColumn hide1 = jTableStudent.getColumnModel().getColumn(1);
        hide1.setMinWidth(0);
        hide1.setMaxWidth(0);
        hide1.setPreferredWidth(0);
        TableColumn hide8 = jTableStudent.getColumnModel().getColumn(9);
        hide8.setMinWidth(0);
        hide8.setMaxWidth(0);
        hide8.setPreferredWidth(0);

    }
//    "ID", "COURSE ID","FIRST NAME", "SURNAME", "COURSE", "MOBILE","EMAIL", "ADDRESS", "DATE OF BIRTH"

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getSource() == jTableStudent) {
            if (e.getButton() == MouseEvent.BUTTON1) {
                if (e.getClickCount() == 1) {
                    int row = jTableStudent.getSelectedRow();
                    if (row != -1) {
                        Long studentId = Long.parseLong(jTableStudent.getValueAt(row, 0).toString());
                        Long courseId = Long.parseLong(jTableStudent.getValueAt(row, 1).toString());
                        String firstname = jTableStudent.getValueAt(row, 2).toString();
                        String surname = jTableStudent.getValueAt(row, 3).toString();
                        String course = jTableStudent.getValueAt(row, 4).toString();
                        String gender = jTableStudent.getValueAt(row, 5).toString();
                        String mobile = jTableStudent.getValueAt(row, 6).toString();
                        String email = jTableStudent.getValueAt(row, 7).toString();
                        String address = jTableStudent.getValueAt(row, 8).toString();
                        String dateOfBirth = jTableStudent.getValueAt(row, 9).toString();
                        Student s = new Student();
                        Course c = new Course();
                        c.setId(courseId);
                        s.setId(studentId);
                        s.setCourse(c);
                        s.setFirstname(firstname);
                        s.setSurname(surname);
                        s.setMobileNo(mobile);
                        s.setEmail(email);
                        s.setAddress(address);
                        if (gender.equals(Gender.MALE.toString())) {
                            s.setGender(Gender.MALE);
                        }else if (gender.equals(Gender.FEMALE.toString())) {
                            s.setGender(Gender.FEMALE);
                        }else if (gender.equals(Gender.OTHER.toString())) {
                            s.setGender(Gender.OTHER);
                        }
                        try {
                            java.util.Date dob = new SimpleDateFormat("yyyy-MM-dd").parse(dateOfBirth);
                            s.setDate_of_birth(dob);
                        } catch (ParseException ex) {
                            Logger.getLogger(JFrameSIS.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        HibernateConfig hibernateConfig = new HibernateConfig();
                        Student st = studentDAOImpl.findPhotoByStudentId(s, hibernateConfig.getEntityManager());
                        s.setPhoto(st.getPhoto());
                        this.student = s;
                    }
                }
            }
        }

    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }
//    "ID", "FIRST NAME", "SURNAME", "COURSE", "MOBILE","EMAIL", "ADDRESS", "DATE OF BIRTH"
    private StudentDAOImpl studentDAOImpl = new StudentDAOImpl();
    String pattern = "MMM. dd, yyyy";
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);

    private void selectStudent() {
        HibernateConfig hc = new HibernateConfig();
        tableModel.setRowCount(0);
        studentDAOImpl.selectStudent(hc.getEntityManager()).forEach(student -> {
            tableModel.addRow(new Object[]{
                student.getId(),
                student.getCourse().getId(),
                student.getFirstname(),
                student.getSurname(),
                student.getCourse().getCourse(),
                student.getGender(),
                student.getMobileNo(),
                student.getEmail(),
                student.getAddress(),
                student.getDate_of_birth(),//
                simpleDateFormat.format(student.getDate_of_birth())

            });
        });
    }

}
